<?php

namespace Model\Custom\NovumSvb;

use Core\Cfg;
use Crud\FormManager;
use Exception\LogicException;
use Model\Custom\NovumSvb\Base\Formulier as BaseFormulier;
use Propel\Runtime\Map\TableMap;

/**
 * Skeleton subclass for representing a row from the 'formulieren' table.
 *
 *
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 */
class Formulier extends BaseFormulier
{

    /**
     * @param string $keyType
     * @param bool $includeLazyLoadColumns
     * @param array $alreadyDumpedObjects
     * @param bool $includeForeignObjects
     * @return array
     * @throws \Propel\Runtime\Exception\PropelException
     * @throws \ReflectionException
     */
    function toArray($keyType = TableMap::TYPE_PHPNAME, $includeLazyLoadColumns = true, $alreadyDumpedObjects = array(), $includeForeignObjects = false)
    {
        $aOut = parent::toArray($keyType, $includeLazyLoadColumns, $alreadyDumpedObjects, $includeForeignObjects); // TODO: Change the autogenerated stub
        $sLayoutName = $this->getCrudEditorReference()->getName();

        $sManagerName = $this->getCrudEditorReference()->getCrudConfig()->getManagerName();

        $oCrudManager = new $sManagerName;

        if(!$oCrudManager instanceof FormManager)
        {
            throw new LogicException("Expected an instance of FormManager");
        }

        $sModuleName = strtolower($oCrudManager->getModuleName());
        $aOut['definitie_url'] = Cfg::get('PROTOCOL') . '://api.' . Cfg::get('DOMAIN') . '/v2/rest/' . $sModuleName . '/definition?layout=' . $sLayoutName;
        $aOut['collectie_url'] = Cfg::get('PROTOCOL') . '://api.' . Cfg::get('DOMAIN') . '/v2/rest/' . $sModuleName . '/';
        $aOut['item_url'] = Cfg::get('PROTOCOL') . '://api.' . Cfg::get('DOMAIN') . '/v2/rest/' . $sModuleName . '/';


        return $aOut;
    }

}
